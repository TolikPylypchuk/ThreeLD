<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BookmarkDoesNotExistFormat" xml:space="preserve">
    <value>Bookmark on event {0} doesn't exist.</value>
  </data>
  <data name="BookmarkRemovedFormat" xml:space="preserve">
    <value>Bookmark on event {0} has been removed.</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CategoryAlreadyPreferredFormat" xml:space="preserve">
    <value>Category {0} is already assigned as preferred.</value>
  </data>
  <data name="ChooseCategory" xml:space="preserve">
    <value>Choose the category.</value>
  </data>
  <data name="EventAlreadyBookmarkedFormat" xml:space="preserve">
    <value>{0} has already been bookmarked.</value>
  </data>
  <data name="EventApprovedFormat" xml:space="preserve">
    <value>{0} has been approved.</value>
  </data>
  <data name="EventBookmarkedFormat" xml:space="preserve">
    <value>{0} has been bookmarked.</value>
  </data>
  <data name="EventCreatedFormat" xml:space="preserve">
    <value>{0} has been created.</value>
  </data>
  <data name="EventDeletedFormat" xml:space="preserve">
    <value>{0} has been deleted.</value>
  </data>
  <data name="EventDoesNotExist" xml:space="preserve">
    <value>The specified event doesn't exist.</value>
  </data>
  <data name="EventUpdatedFormat" xml:space="preserve">
    <value>{0} has been updated.</value>
  </data>
  <data name="LoginInvalid" xml:space="preserve">
    <value>Invalid name or password.</value>
  </data>
  <data name="LoginPasswordDisplayName" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LoginPasswordRequired" xml:space="preserve">
    <value>The password is required.</value>
  </data>
  <data name="LogInText" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="LoginUserNameDisplayName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="LoginUserNameRequired" xml:space="preserve">
    <value>The user name is required.</value>
  </data>
  <data name="LogOutText" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="NotificationAlreadyRead" xml:space="preserve">
    <value>The notification is already checked as read.</value>
  </data>
  <data name="NotificationDoesNotExist" xml:space="preserve">
    <value>The notification doesn't exist.</value>
  </data>
  <data name="NotificationRead" xml:space="preserve">
    <value>The notification has been checked as read.</value>
  </data>
  <data name="PreferenceAdded" xml:space="preserve">
    <value>The preference has been added.</value>
  </data>
  <data name="PreferenceDoesNotExist" xml:space="preserve">
    <value>The specified preference doesn't exist.</value>
  </data>
  <data name="PreferenceRemoved" xml:space="preserve">
    <value>The preference has been removed.</value>
  </data>
  <data name="SignUpEmailDisplayName" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="SignUpEmailInvalid" xml:space="preserve">
    <value>The email is invalid.</value>
  </data>
  <data name="SignUpEmailRequired" xml:space="preserve">
    <value>The email is required.</value>
  </data>
  <data name="SignUpFirstNameDisplayName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="SignUpFirstNameRequired" xml:space="preserve">
    <value>The first name is required.</value>
  </data>
  <data name="SignUpLastNameDisplayName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="SignUpLastNameRequired" xml:space="preserve">
    <value>The last name is required.</value>
  </data>
  <data name="SignUpPasswordDisplayName" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SignUpPasswordRequired" xml:space="preserve">
    <value>The password is required.</value>
  </data>
  <data name="SignUpText" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignUpUserNameDisplayName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="SignUpUserNameRequired" xml:space="preserve">
    <value>The user name is required.</value>
  </data>
  <data name="UserNotFoundText" xml:space="preserve">
    <value>User Not Found</value>
  </data>
  <data name="UsersHeader" xml:space="preserve">
    <value>User Accounts</value>
  </data>
  <data name="UsersTitle" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="ViewEventsHeader" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="ViewEventsTitle" xml:space="preserve">
    <value>View Events</value>
  </data>
  <data name="ActionsText" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="AssignEditorText" xml:space="preserve">
    <value>Assign Editor</value>
  </data>
  <data name="CreateEventText" xml:space="preserve">
    <value>Create an Event</value>
  </data>
  <data name="EditEventHeaderFormat" xml:space="preserve">
    <value>{0} an Event</value>
  </data>
  <data name="EditEventTitleFormat" xml:space="preserve">
    <value>{0} an Event</value>
  </data>
  <data name="ErrorText" xml:space="preserve">
    <value>Something went wrong. Please try again.</value>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="LinkText" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="MyNotificationsText" xml:space="preserve">
    <value>My Notifications</value>
  </data>
  <data name="MyProfileText" xml:space="preserve">
    <value>My Profile</value>
  </data>
  <data name="NoUserAccountsText" xml:space="preserve">
    <value>No User Accounts</value>
  </data>
  <data name="OKText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ProposedEventsHeader" xml:space="preserve">
    <value>Proposed Events</value>
  </data>
  <data name="ProposedEventsTitle" xml:space="preserve">
    <value>Proposed Events</value>
  </data>
  <data name="ProposeEventText" xml:space="preserve">
    <value>Propose an Event</value>
  </data>
  <data name="ProfileTitle" xml:space="preserve">
    <value>Account Info</value>
  </data>
  <data name="SubmitText" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="UnassignEditorText" xml:space="preserve">
    <value>Unassign Editor</value>
  </data>
  <data name="ViewPreferredEventsText" xml:space="preserve">
    <value>View Preferred Events</value>
  </data>
  <data name="ViewProposedEventsText" xml:space="preserve">
    <value>View Proposed Events</value>
  </data>
  <data name="AllPreferencesText" xml:space="preserve">
    <value>You prefer every category out there.</value>
  </data>
  <data name="BookmarksHeader" xml:space="preserve">
    <value>Bookmarks</value>
  </data>
  <data name="BookmarkText" xml:space="preserve">
    <value>Bookmark</value>
  </data>
  <data name="ChooseCategoryText" xml:space="preserve">
    <value>Choose category...</value>
  </data>
  <data name="NoBookmarks" xml:space="preserve">
    <value>You don't have any bookmarks.</value>
  </data>
  <data name="NoPreferencesText" xml:space="preserve">
    <value>You don't have any preferences.</value>
  </data>
  <data name="NotificationsCheckAll" xml:space="preserve">
    <value>Check all as read</value>
  </data>
  <data name="PreferencesHeader" xml:space="preserve">
    <value>Preferences</value>
  </data>
  <data name="ProfileHeader" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="ViewNotificationsHeader" xml:space="preserve">
    <value>My Notifications</value>
  </data>
  <data name="ViewNotificationsTitle" xml:space="preserve">
    <value>My Notifications</value>
  </data>
  <data name="ViewPreferedEventsHeader" xml:space="preserve">
    <value>Prefered Events</value>
  </data>
  <data name="ViewPreferedEventsTitle" xml:space="preserve">
    <value>Prefered Events</value>
  </data>
  <data name="CreateText" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="EditText" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ProposeText" xml:space="preserve">
    <value>Propose</value>
  </data>
  <data name="LogInHeader" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="LogInTitle" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="SignUpHeader" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignUpTitle" xml:space="preserve">
    <value>Sign Up</value>
  </data>
</root>